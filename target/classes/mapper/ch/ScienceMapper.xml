<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.ch.ScienceMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.ch.Science" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="science" property="science" jdbcType="VARCHAR" />
    <result column="principal" property="principal" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="introducte" property="introducte" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="ispass" property="ispass" jdbcType="VARCHAR" />
    <result column="codeid" property="codeid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, science, principal, phone, introducte, sex, ispass, codeid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pojo.ch.ScienceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from science
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from science
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from science
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pojo.ch.ScienceExample" >
    delete from science
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pojo.ch.Science" >
    insert into science (id, science, principal, 
      phone, introducte, sex, 
      ispass, codeid)
    values (#{id,jdbcType=INTEGER}, #{science,jdbcType=VARCHAR}, #{principal,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{introducte,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{ispass,jdbcType=VARCHAR}, #{codeid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.ch.Science" >
    insert into science
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="science != null" >
        science,
      </if>
      <if test="principal != null" >
        principal,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="introducte != null" >
        introducte,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="ispass != null" >
        ispass,
      </if>
      <if test="codeid != null" >
        codeid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="science != null" >
        #{science,jdbcType=VARCHAR},
      </if>
      <if test="principal != null" >
        #{principal,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="introducte != null" >
        #{introducte,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="ispass != null" >
        #{ispass,jdbcType=VARCHAR},
      </if>
      <if test="codeid != null" >
        #{codeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pojo.ch.ScienceExample" resultType="java.lang.Integer" >
    select count(*) from science
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update science
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.science != null" >
        science = #{record.science,jdbcType=VARCHAR},
      </if>
      <if test="record.principal != null" >
        principal = #{record.principal,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.introducte != null" >
        introducte = #{record.introducte,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.ispass != null" >
        ispass = #{record.ispass,jdbcType=VARCHAR},
      </if>
      <if test="record.codeid != null" >
        codeid = #{record.codeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update science
    set id = #{record.id,jdbcType=INTEGER},
      science = #{record.science,jdbcType=VARCHAR},
      principal = #{record.principal,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      introducte = #{record.introducte,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      ispass = #{record.ispass,jdbcType=VARCHAR},
      codeid = #{record.codeid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.ch.Science" >
    update science
    <set >
      <if test="science != null" >
        science = #{science,jdbcType=VARCHAR},
      </if>
      <if test="principal != null" >
        principal = #{principal,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="introducte != null" >
        introducte = #{introducte,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="ispass != null" >
        ispass = #{ispass,jdbcType=VARCHAR},
      </if>
      <if test="codeid != null" >
        codeid = #{codeid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.ch.Science" >
    update science
    set science = #{science,jdbcType=VARCHAR},
      principal = #{principal,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      introducte = #{introducte,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      ispass = #{ispass,jdbcType=VARCHAR},
      codeid = #{codeid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>