<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.gjc.WorkMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.gjc.Work" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="studentID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="studentName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sex" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="age" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="state" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="local" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, studentID, studentName, sex, age, state, local, phone
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from work
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from work
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pojo.gjc.Work" >
    insert into work (id, studentID, studentName, 
      sex, age, state, local, 
      phone)
    values (#{id,jdbcType=INTEGER}, #{studentid,jdbcType=INTEGER}, #{studentname,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, #{local,jdbcType=VARCHAR}, 
      #{phone,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.gjc.Work" >
    insert into work
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentid != null" >
        studentID,
      </if>
      <if test="studentname != null" >
        studentName,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="local != null" >
        local,
      </if>
      <if test="phone != null" >
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="studentname != null" >
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="local != null" >
        #{local,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.gjc.Work" >
    update work
    <set >
      <if test="studentid != null" >
        studentID = #{studentid,jdbcType=INTEGER},
      </if>
      <if test="studentname != null" >
        studentName = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="local != null" >
        local = #{local,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.gjc.Work" >
    update work
    set studentID = #{studentid,jdbcType=INTEGER},
      studentName = #{studentname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      local = #{local,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from work
  </select>
  <select id="selectByStudentId" resultMap="BaseResultMap" parameterType="int">
    select * from work where studentID=#{aaa}
  </select>
</mapper>